<UserControl x:Class="SteveCadwallader.CodeMaid.UI.ToolWindows.Spade.SpadeView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" mc:Ignorable="d"
        xmlns:local="clr-namespace:SteveCadwallader.CodeMaid.UI.ToolWindows.Spade"
        xmlns:cnv="clr-namespace:SteveCadwallader.CodeMaid.UI.Converters"
        xmlns:ui="clr-namespace:SteveCadwallader.CodeMaid.UI"
        d:DataContext="{d:DesignInstance local:SpadeViewModel, IsDesignTimeCreatable=True}"
        PreviewMouseDown="OnPreviewMouseDown" PreviewMouseWheel="OnPreviewMouseWheel"
        Background="{DynamicResource FWindow}" Foreground="{DynamicResource FGWindow}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/SteveCadwallader.CodeMaid;component/UI/Themes/CodeMaidCoreTheme.xaml" />
                <ResourceDictionary Source="CodeItemTemplates.xaml" />
                <ResourceDictionary Source="CodeItemToolTipTemplates.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <ToolTip x:Key="treeViewItemToolTip" OverridesDefaultStyle="True" Placement="Left">
                <ToolTip.Template>
                    <ControlTemplate TargetType="{x:Type ToolTip}">
                        <Border Background="White" BorderBrush="DimGray" BorderThickness="1" CornerRadius="2" Padding="7,5" TextElement.Foreground="Black">
                            <ContentPresenter Content="{Binding}">
                                <ContentPresenter.ContentTemplateSelector>
                                    <local:CodeItemToolTipTemplateSelector
                                            ConstructorDataTemplate="{StaticResource constructorToolTipDataTemplate}"
                                            DefaultDataTemplate="{StaticResource defaultToolTipDataTemplate}"
                                            DestructorDataTemplate="{StaticResource destructorToolTipDataTemplate}"
                                            FieldDataTemplate="{StaticResource fieldToolTipDataTemplate}"
                                            MethodDataTemplate="{StaticResource methodToolTipDataTemplate}"
                                            PropertyDataTemplate="{StaticResource propertyToolTipDataTemplate}" />
                                </ContentPresenter.ContentTemplateSelector>
                            </ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </ToolTip.Template>
            </ToolTip>

            <Style x:Key="spadeTreeViewItemContainerStyle" TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource treeViewItemContainerStyle}">
                <Setter Property="Foreground" Value="{DynamicResource FGWindow}" />
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay, FallbackValue=True}" />
                <Setter Property="ToolTip" Value="{StaticResource treeViewItemToolTip}" />
                <Setter Property="ToolTipService.ShowDuration" Value="600000" />
                <EventSetter Event="KeyDown" Handler="OnTreeViewItemKeyDown" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid IsSharedSizeScope="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="ExpanderColumn" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <Border x:Name="PART_HeaderBorder" Grid.ColumnSpan="2" AllowDrop="True"
                                            Background="{TemplateBinding Background}" BorderBrush="{DynamicResource FWindow}"
                                            BorderThickness="0,0,0,2" Cursor="Hand"
                                            DragEnter="OnTreeViewItemHeaderDragEvent"
                                            DragOver="OnTreeViewItemHeaderDragEvent"
                                            DragLeave="OnTreeViewItemHeaderDragLeave" Drop="OnTreeViewItemHeaderDrop"
                                            Mouse.MouseDown="OnTreeViewItemHeaderMouseDown"
                                            Mouse.MouseMove="OnTreeViewItemHeaderMouseMove"
                                            Mouse.MouseUp="OnTreeViewItemHeaderMouseUp">
                                        <Grid>
                                            <Grid Margin="{TemplateBinding Padding}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" SharedSizeGroup="ExpanderColumn" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>

                                                <ToggleButton x:Name="expander" ClickMode="Press"
                                                              IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                              Style="{StaticResource treeViewItemToggleButton}" />

                                                <ContentPresenter x:Name="PART_Header" Grid.Column="1" ContentSource="Header" />
                                            </Grid>

                                            <Border x:Name="dropTargetCue" BorderBrush="{StaticResource FCodeMaidGreen}"
                                                    SnapsToDevicePixels="True" Visibility="Collapsed" />
                                        </Grid>
                                    </Border>

                                    <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Margin="0,2,0,0" />
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="False">
                                    <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter TargetName="expander" Property="Visibility" Value="Hidden" />
                                    <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                                    <Setter Property="Background" Value="Transparent" />
                                    <Setter Property="BorderThickness" Value="0" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource FItemHighlight}" />
                                </Trigger>
                                <Trigger SourceName="PART_HeaderBorder" Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource FItemHighlight}" />
                                    <Setter Property="Cursor" Value="Hand" />
                                </Trigger>
                                <Trigger Property="ui:DragDropAttachedProperties.IsBeingDragged" Value="True">
                                    <Setter Property="Opacity" Value="0.5" />
                                </Trigger>
                                <Trigger Property="ui:DragDropAttachedProperties.IsDropAboveTarget" Value="True">
                                    <Setter TargetName="dropTargetCue" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="dropTargetCue" Property="VerticalAlignment" Value="Top" />
                                    <Setter TargetName="dropTargetCue" Property="BorderThickness" Value="0,1,0,0" />
                                    <Setter TargetName="dropTargetCue" Property="Margin" Value="0,-1,0,0" />
                                </Trigger>
                                <Trigger Property="ui:DragDropAttachedProperties.IsDropBelowTarget" Value="True">
                                    <Setter TargetName="dropTargetCue" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="dropTargetCue" Property="VerticalAlignment" Value="Bottom" />
                                    <Setter TargetName="dropTargetCue" Property="BorderThickness" Value="0,0,0,1" />
                                    <Setter TargetName="dropTargetCue" Property="Margin" Value="0,0,0,-2" />
                                </Trigger>
                                <Trigger Property="ui:DragDropAttachedProperties.IsDropOnTarget" Value="True">
                                    <Setter TargetName="dropTargetCue" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="dropTargetCue" Property="BorderThickness" Value="1" />
                                    <Setter TargetName="dropTargetCue" Property="Margin" Value="0,-1,0,-2" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid TextElement.FontFamily="Tahoma">
        <TreeView x:Name="treeView" BorderThickness="0" ItemsSource="{Binding OrganizedCodeItems}"
                ItemContainerStyle="{StaticResource spadeTreeViewItemContainerStyle}"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled" FocusManager.IsFocusScope="True">
            <TreeView.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel>
                        <StackPanel.LayoutTransform>
                            <ScaleTransform
                                    ScaleX="{Binding ScaleFactor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SpadeView}}}"
                                    ScaleY="{Binding ScaleFactor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:SpadeView}}}" />
                        </StackPanel.LayoutTransform>
                    </StackPanel>
                </ItemsPanelTemplate>
            </TreeView.ItemsPanel>
            <TreeView.ItemTemplateSelector>
                <local:CodeItemTemplateSelector MethodDataTemplate="{StaticResource methodDataTemplate}"
                        ParentDataTemplate="{StaticResource parentDataTemplate}"
                        PropertyDataTemplate="{StaticResource propertyDataTemplate}"
                        RegionDataTemplate="{StaticResource regionDataTemplate}"
                        StandardDataTemplate="{StaticResource standardDataTemplate}" />
            </TreeView.ItemTemplateSelector>
        </TreeView>

        <Border Background="{DynamicResource FOverlay}"
                Visibility="{Binding IsRefreshing, Converter={x:Static cnv:BooleanToVisibilityConverter.Default}}" />

        <ContentControl Content="{Binding}" Focusable="False" VerticalAlignment="Center">
            <ContentControl.ContentTemplate>
                <DataTemplate>
                    <Border x:Name="outerBorder" Background="{DynamicResource FWindow}" BorderBrush="{StaticResource FCodeMaidGreen}"
                            BorderThickness="0,1" Margin="1,0" Padding="0,5" Visibility="Collapsed">
                        <StackPanel HorizontalAlignment="Center">
                            <TextBlock x:Name="stateLabel" FontSize="12" FontStyle="Italic"
                                    Foreground="{StaticResource FCodeMaidGray}" />
                            <TextBlock FontSize="14" FontWeight="Bold" Foreground="{StaticResource FCodeMaidGreen}"
                                    Text="{Binding Document.Name}" />
                        </StackPanel>
                    </Border>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsLoading}" Value="True">
                            <Setter TargetName="outerBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="stateLabel" Property="Text" Value="loading" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsRefreshing}" Value="True">
                            <Setter TargetName="outerBorder" Property="Visibility" Value="Visible" />
                            <Setter TargetName="stateLabel" Property="Text" Value="refreshing" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ContentControl.ContentTemplate>
        </ContentControl>
    </Grid>
</UserControl>